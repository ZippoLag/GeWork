{"version":3,"sources":["components/cabecera/Cabecera.js","components/pie/Pie.js","components/elegirAccion/ElegirAccion.js","components/selectorUbicacion/SelectorUbicacion.js","components/selectorFecha/SelectorFecha.js","components/mapa/Mapa.js","components/selectorEspacio/SelectorEspacio.js","components/reservarPuesto/ReservarPuesto.js","index.js","fetchWrapper.js","utils.js"],"names":["Cabecera","state","className","to","Toggle","drop","id","bsPrefix","variant","data-toggle","aria-expanded","this","props","usuario","iniciales","animation","role","size","Menu","x-placement","Item","href","username","isAdmin","Component","Pie","ElegirAccion","disabled","SelectorUbicacion","handleCambioPais","bind","handleCambioProvincia","handleCambioLocalidad","evento","nuevaIdSeleccionada","target","selectedOptions","attributes","id_pais","value","actualizarMapa","Number","parseInt","id_provincia","id_localidad","htmlFor","onChange","paises","map","pais","key","nombre_pais","provincias","provincia","nombre_provincia","localidades","localidad","nombre_localidad","SelectorFecha","handleCambiofecha","fechaReserva","moment","type","name","format","pattern","min","Date","Mapa","coworks","filter","cowork","id_cowork","lat","lng","getCoworksReales","googleMapsApiKey","mapContainerStyle","height","width","zoom","center","reduce","prev","curr","length","index","position","onClick","evt","elegirCowork","title","nombre","label","SelectorEspacio","handleCambioCowork","httpClient","get","then","data","setState","catch","error","console","log","nombre_cowork","espacios","espacio","id_espacio","Header","nombre_espacio","Body","Title","Text","ubicacion_espacio","irAConfirmacion","codigo_turno","precioMJ_espacio","precioJC_espacio","Footer","prestaciones","prestacion","nombre_prestacion","id_prestacion","icono_prestacion","ReservarPuesto","puestos","Index","completarProvincia","find","completarLocalidad","push","isInteger","seleccion","year","month","date","Set","puesto","fetchPaises","fetchProvincias","fetchLocalidades","getCookie","fetchInformacionGeografica","fetchCoworksConVacantes","exact","path","component","getProvinciasDelPais","getLocalidadesDeLaProvincia","ReactDOM","render","fallback","document","getElementById","baseUrl","process","readUrl","url","startsWith","handleErrors","response","ok","Error","statusText","headers","fetch","method","Accept","json","post","body","JSON","stringify","put","delete","cookieName","qualifiedName","cookie","split","c","trim","indexOf","replace"],"mappings":"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","file":"static/js/main.cb07e8cb.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\n//TODO: mover el router a index.js y usar los Links de ese componente con className=\"nav-link\" (en lugar del componente Nav.Link de react-bootstrap)\r\n\r\nimport './Cabecera.css';\r\n\r\nexport class Cabecera extends Component {\r\n  static propTypes = {\r\n    usuario: PropTypes.object\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"row w-100 m-0 p-0 d-flex justify-content-between align-items-center gework-bg-primario bg-primary\">\r\n        <Col className=\"col-12 col-md-6 d-flex justify-content-center navbar-brand\">\r\n          <Link to=\"/\">\r\n            {/* TODO: agregar logo: <img\r\n              src=\"/static/logo.png\"\r\n              width=\"33px\"\r\n              height=\"33px\"\r\n              alt={\"Logo GeWork\"}\r\n            /> */}\r\n            <h1>GeWork</h1>\r\n          </Link>\r\n          {/* TODO: mejorar responsividad partiendo título y links en rows */}\r\n          <Link className=\"nav-link\" to=\"/reservar-puesto\">Reservar puesto</Link>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-4 d-flex justify-content-end justify-content-md-center\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                drop=\"none\"\r\n                id=\"menu-usuario\"\r\n                bsPrefix=\"menu-usuario-style\"\r\n                variant=\"none\"\r\n              >\r\n                <span\r\n                  className=\"d-flex justify-content-center align-items-center dropdown-toggle username-circle gework-bg-secundario\"\r\n                  data-toggle=\"dropdown-menu\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  {this.props.usuario.iniciales || (<Spinner\r\n                                animation=\"border\"\r\n                                role=\"status\"\r\n                                size=\"lg\"\r\n                              />)}\r\n                </span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu x-placement=\"bottom-start\">\r\n                <Dropdown.Item href=\"/adminlogout/\">\r\n                  {`Cerrar sesión ${this.props.usuario.username || ''}`}\r\n                </Dropdown.Item>\r\n                {this.props.usuario.isAdmin ? (\r\n                  <Dropdown.Item href=\"/admin\">\r\n                    Administración\r\n                  </Dropdown.Item>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Col>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cabecera;\r\n","import React, { Component } from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport './Pie.css';\r\n\r\nclass Pie extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n        <footer>\r\n          <Row className=\"w-100 d-flex justify-content-end align-items-end\">\r\n            Cindi L. Martín - Sebastián R. Vansteenkiste\r\n          </Row>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pie;\r\n","import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './ElegirAccion.css';\r\n\r\nexport class ElegirAccion extends Component {\r\n  static propTypes = {\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"d-flex justify-content-around align-items-center\">\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <Link className=\"w-100 btn btn-primary\" to=\"/reservar-puesto\">Reservar Puesto</Link>\r\n          </Col>\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Reservar Sala</div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-around align-items-center\">\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Ofrecer Puesto</div>\r\n          </Col>\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Ofrecer Sala</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElegirAccion;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './SelectorUbicacion.css';\r\n\r\nexport class SelectorUbicacion extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleCambioPais = this.handleCambioPais.bind(this);\r\n    this.handleCambioProvincia = this.handleCambioProvincia.bind(this);\r\n    this.handleCambioLocalidad = this.handleCambioLocalidad.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    paises: PropTypes.array.isRequired,\r\n    provincias: PropTypes.array.isRequired,\r\n    localidades: PropTypes.array.isRequired,\r\n    id_pais: PropTypes.number,\r\n    id_provincia: PropTypes.number,\r\n    id_localidad: PropTypes.number,\r\n    actualizarMapa: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {};\r\n\r\n  handleCambioPais(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_pais.value;\r\n    this.props.actualizarMapa({\r\n      id_pais: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  handleCambioProvincia(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_provincia.value;\r\n    this.props.actualizarMapa({\r\n      id_provincia: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  handleCambioLocalidad(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_localidad.value;\r\n    this.props.actualizarMapa({\r\n      id_localidad: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    //TODO: mejorar apariencia! (ver por qué no andaban los dropdowns de bootstrap!)\r\n    return (\r\n      <Row className='d-flex justify-content-around align-items-center'>\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='pais-select'>País:</label>\r\n          <select\r\n            className='from-control'\r\n            id='pais-select'\r\n            onChange={this.handleCambioPais}\r\n            value={this.props.id_pais}\r\n          >\r\n            {this.props.paises.map((pais) => (\r\n              <option\r\n                key={pais.id_pais}\r\n                id_pais={pais.id_pais}\r\n                value={pais.id_pais}\r\n              >\r\n                {pais.nombre_pais}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='provincia-select'>Provincia:</label>\r\n          <select\r\n            className='from-control'\r\n            id='provincia-select'\r\n            disabled={this.props.id_pais === 0}\r\n            onChange={this.handleCambioProvincia}\r\n            value={this.props.id_provincia}\r\n          >\r\n            {this.props.provincias.map((provincia) => (\r\n              <option\r\n                key={provincia.id_provincia}\r\n                id_provincia={provincia.id_provincia}\r\n                value={provincia.id_provincia}\r\n              >\r\n                {provincia.nombre_provincia}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='localidad-select'>Localidad:</label>\r\n          <select\r\n            className='from-control'\r\n            id='localidad-select'\r\n            disabled={this.props.id_provincia === 0}\r\n            value={this.props.id_localidad}\r\n            onChange={this.handleCambioLocalidad}\r\n          >\r\n            {this.props.localidades.map((localidad) => (\r\n              <option\r\n                key={localidad.id_localidad}\r\n                id_localidad={localidad.id_localidad}\r\n                value={localidad.id_localidad}\r\n              >\r\n                {localidad.nombre_localidad}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorUbicacion;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as momentPropTypes from 'react-moment-proptypes';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './SelectorFecha.css';\r\n\r\nexport class SelectorFecha extends Component {\r\n  constructor(props){\r\n    super();\r\n\r\n    this.handleCambiofecha = this.handleCambiofecha.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    fechaReserva: momentPropTypes.momentObj.isRequired,\r\n    actualizarMapa: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n  };\r\n\r\n  handleCambiofecha(evento){\r\n    //TODO: agregar validaciones\r\n    this.props.actualizarMapa({fechaReserva: moment(evento.target.value)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"d-flex justify-content-around align-items-center\">\r\n        <Col className=\"form-group col-12 col-md-3\" role=\"group\" >\r\n          <label htmlFor=\"fecha-reserva\">Fecha:</label>\r\n\r\n          <input\r\n            type=\"date\"\r\n            id=\"fecha-reserva\"\r\n            name=\"fecha-reserva\"\r\n            value={this.props.fechaReserva.format(\"YYYY-MM-DD\")}\r\n            onChange={this.handleCambiofecha}\r\n            pattern=\"DD/MM/YYYY\"\r\n            min={new Date()}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorFecha;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\r\n\r\nclass Mapa extends Component {\r\n  static propTypes = {\r\n    coworks: PropTypes.array.isRequired,\r\n    elegirCowork: PropTypes.func.isRequired,\r\n    googleMapsApiKey: PropTypes.string.isRequired\r\n  };\r\n\r\n  getCoworksReales() {\r\n    return this.props.coworks.filter(\r\n      (cowork) => cowork.id_cowork !== 0 && cowork.lat && cowork.lng\r\n    );\r\n  }\r\n\r\n  render() {\r\n    let coworks = this.getCoworksReales();\r\n    return (\r\n      <LoadScript\r\n        id='script-loader'\r\n        googleMapsApiKey={this.props.googleMapsApiKey}\r\n      >\r\n        <GoogleMap\r\n          id='marker-example'\r\n          mapContainerStyle={{\r\n            height: '360px',\r\n            width: '100%'\r\n          }}\r\n          zoom={14}\r\n          center={{\r\n            lat:\r\n              coworks\r\n                .map((cowork) => cowork.lat)\r\n                .reduce((prev, curr) => (curr += prev)) / coworks.length,\r\n            lng:\r\n              coworks\r\n                .map((cowork) => cowork.lng)\r\n                .reduce((prev, curr) => (curr += prev)) / coworks.length\r\n          }}\r\n        >\r\n          {coworks.map((cowork, index) => (\r\n            <Marker\r\n              key={index}\r\n              position={{ lat: cowork.lat, lng: cowork.lng }}\r\n              onClick={(evt) => {\r\n                return this.props.elegirCowork({\r\n                  id_cowork: cowork.id_cowork\r\n                });\r\n              }}\r\n              title={cowork.nombre}\r\n              label={cowork.nombre}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Mapa;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport CardDeck from 'react-bootstrap/CardDeck';\r\nimport Card from 'react-bootstrap/Card';\r\n\r\nimport httpClient from '../../fetchWrapper';\r\n\r\nimport Mapa from '../mapa/Mapa';\r\n\r\n//TODO: convertir en selector de Cowork? (el selector de espacio en realidad va debajo del mapa y muestra los detalles)\r\n\r\nimport './SelectorEspacio.css';\r\n\r\nexport class SelectorEspacio extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleCambioCowork = this.handleCambioCowork.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    espacios: PropTypes.array.isRequired,\r\n    coworks: PropTypes.array.isRequired,\r\n    id_espacio: PropTypes.number.isRequired,\r\n    id_cowork: PropTypes.number.isRequired,\r\n    irAConfirmacion: PropTypes.func.isRequired,\r\n    elegirCowork: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n    googleMapsApiKey: ''\r\n  };\r\n\r\n  componentDidMount() {\r\n    httpClient\r\n      .get(`api/googlemapsapikey/`)\r\n      .then((data) =>\r\n        this.setState({ googleMapsApiKey: data.googleMapsApiKey })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  handleCambioCowork(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_cowork.value;\r\n    this.props.elegirCowork({\r\n      id_cowork: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className='d-flex justify-content-around align-items-center'>\r\n        <Col className='form-group col-12' role='group'>\r\n          {this.state.googleMapsApiKey && (\r\n            <Mapa\r\n              googleMapsApiKey={this.state.googleMapsApiKey}\r\n              coworks={this.props.coworks}\r\n              elegirCowork={this.props.elegirCowork}\r\n            />\r\n          )}\r\n        </Col>\r\n\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='cowork-select'>CoWork:</label>\r\n          <select\r\n            className='from-control'\r\n            id='cowork-select'\r\n            disabled={this.props.coworks.length === 0}\r\n            value={this.props.id_cowork}\r\n            onChange={this.handleCambioCowork}\r\n          >\r\n            {this.props.coworks.map((cowork) => (\r\n              <option\r\n                key={cowork.id_cowork}\r\n                id_cowork={cowork.id_cowork}\r\n                value={cowork.id_cowork}\r\n              >\r\n                {cowork.nombre_cowork}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n\r\n        <Col className='form-group col-12' role='group'>\r\n          <CardDeck>\r\n            {this.props.espacios\r\n              .filter(\r\n                (espacio) =>\r\n                  this.props.id_cowork === 0 ||\r\n                  this.props.id_cowork === espacio.cowork.id_cowork\r\n              )\r\n              .map((espacio) => (\r\n                <Card key={espacio.id_espacio}>\r\n                  <Card.Header>{espacio.nombre_espacio}</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Title>\r\n                      {espacio.cowork.nombre_cowork} - {espacio.nombre_espacio}\r\n                    </Card.Title>\r\n                    <Card.Text>{espacio.ubicacion_espacio}</Card.Text>\r\n                    <Row>\r\n                      <Row className='col-12 col-lg-9 m-0 p-0'>\r\n                        <Col\r\n                          className='col-6 col-lg-12 btn btn-primary'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            return this.props.irAConfirmacion({\r\n                              id_espacio: espacio.id_espacio,\r\n                              codigo_turno: 'm'\r\n                            });\r\n                          }}\r\n                        >\r\n                          TURNO MAÑANA (${espacio.precioMJ_espacio}ARS)\r\n                        </Col>\r\n                        <Col\r\n                          className='col-6 col-lg-12 btn btn-primary'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            return this.props.irAConfirmacion({\r\n                              id_espacio: espacio.id_espacio,\r\n                              codigo_turno: 't'\r\n                            });\r\n                          }}\r\n                        >\r\n                          TURNO TARDE (${espacio.precioMJ_espacio}ARS)\r\n                        </Col>\r\n                      </Row>\r\n                      <Col\r\n                        className='col-12 col-lg-3 h-lg-100 btn btn-primary'\r\n                        type='button'\r\n                        onClick={() => {\r\n                          return this.props.irAConfirmacion({\r\n                            id_espacio: espacio.id_espacio,\r\n                            codigo_turno: 'c'\r\n                          });\r\n                        }}\r\n                      >\r\n                        JORNADA COMPLETA (${espacio.precioJC_espacio}ARS)\r\n                      </Col>\r\n                    </Row>\r\n                  </Card.Body>\r\n                  <Card.Footer>\r\n                    {espacio.prestaciones.map((prestacion) => (\r\n                      <span\r\n                        className='mr-1 cursor-default'\r\n                        title={prestacion.nombre_prestacion}\r\n                        key={prestacion.id_prestacion}\r\n                      >\r\n                        {prestacion.icono_prestacion}\r\n                      </span>\r\n                    ))}\r\n                  </Card.Footer>\r\n                </Card>\r\n              ))}\r\n          </CardDeck>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorEspacio;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as momentPropTypes from 'react-moment-proptypes';\r\n\r\nimport SelectorUbicacion from '../selectorUbicacion/SelectorUbicacion';\r\nimport SelectorFecha from '../selectorFecha/SelectorFecha';\r\nimport SelectorEspacio from '../selectorEspacio/SelectorEspacio';\r\n\r\nimport './ReservarPuesto.css';\r\n\r\nexport class ReservarPuesto extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.actualizarMapa = this.actualizarMapa.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    paises: PropTypes.array.isRequired,\r\n    provincias: PropTypes.array.isRequired,\r\n    localidades: PropTypes.array.isRequired,\r\n    fechaReserva: momentPropTypes.momentObj.isRequired,\r\n    actualizarMapa: PropTypes.func.isRequired,\r\n    irAConfirmacion: PropTypes.func.isRequired,\r\n    elegirCowork: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {};\r\n\r\n  actualizarMapa(props) {\r\n    this.props.actualizarMapa(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectorUbicacion\r\n          paises={this.props.paises}\r\n          provincias={this.props.provincias}\r\n          localidades={this.props.localidades}\r\n          id_pais={this.props.id_pais}\r\n          id_provincia={this.props.id_provincia}\r\n          id_localidad={this.props.id_localidad}\r\n          actualizarMapa={this.actualizarMapa}\r\n        />\r\n        <SelectorFecha\r\n          actualizarMapa={this.actualizarMapa}\r\n          fechaReserva={this.props.fechaReserva}\r\n        />\r\n        {this.props.espacios.length > 0 ? (\r\n          <SelectorEspacio\r\n            coworks={this.props.coworks}\r\n            espacios={this.props.espacios}\r\n            puestos={this.props.puestos}\r\n            id_espacio={this.props.id_espacio}\r\n            irAConfirmacion={this.props.irAConfirmacion}\r\n            id_cowork={this.props.id_cowork}\r\n            elegirCowork={this.props.elegirCowork}\r\n          />\r\n        ) : (\r\n          <h3>\r\n            No hay Coworks con Espacios disponibles para mostrar. Seleccione\r\n            otra ubicación/fecha.\r\n          </h3>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservarPuesto;\r\n","import React, { Suspense, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Cabecera from './components/cabecera/Cabecera';\r\nimport Pie from './components/pie/Pie';\r\n\r\nimport ElegirAccion from './components/elegirAccion/ElegirAccion';\r\nimport ReservarPuesto from './components/reservarPuesto/ReservarPuesto';\r\n\r\nimport httpClient from './fetchWrapper';\r\nimport getCookie from './utils';\r\n\r\nimport './index.css';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.actualizarMapa = this.actualizarMapa.bind(this);\r\n    this.irAConfirmacion = this.irAConfirmacion.bind(this);\r\n    this.elegirCowork = this.elegirCowork.bind(this);\r\n  }\r\n\r\n  state = {\r\n    usuario: {},\r\n    coworks: [],\r\n    espacios: [],\r\n    puestos: [],\r\n    localidades: [{ id_localidad: 0, nombre_localidad: 'Cargando..' }],\r\n    provincias: [{ id_provincia: 0, nombre_localidad: 'Cargando..' }],\r\n    paises: [{ id_pais: 0, nombre_localidad: 'Cargando..' }],\r\n    id_pais: 0,\r\n    id_provincia: 0,\r\n    id_localidad: 0,\r\n    id_espacio: 0,\r\n    id_cowork: 0,\r\n    codigo_turno: '',\r\n    fechaReserva: moment(new Date())\r\n  };\r\n\r\n  getProvinciasDelPais() {\r\n    let provincias = [];\r\n\r\n    if (this.state.id_pais === 0) {\r\n      provincias = [{ id_provincia: 0, nombre_provincia: 'Seleccione Pais..' }];\r\n    } else {\r\n      provincias = [\r\n        { id_provincia: 0, nombre_provincia: 'Seleccione Provincia..' }\r\n      ];\r\n    }\r\n\r\n    if (this.state.id_pais) {\r\n      provincias.push(\r\n        ...this.state.provincias.filter((provincia) =>\r\n          Number.isInteger(provincia.pais)\r\n            ? provincia.pais === this.state.id_pais\r\n            : provincia.pais.id_pais === this.state.id_pais\r\n        )\r\n      );\r\n    }\r\n\r\n    return provincias;\r\n  }\r\n\r\n  getLocalidadesDeLaProvincia() {\r\n    //FIXME: ver por qué a veces esto devuelve una lista vacía (cuando no se elije provincia y se intenta elegir localidad demasiado pronto?)\r\n    let localidades = [];\r\n\r\n    if (this.state.id_provincia === 0) {\r\n      localidades = [\r\n        { id_localidad: 0, nombre_localidad: 'Seleccione Provincia..' }\r\n      ];\r\n    } else {\r\n      localidades = [\r\n        { id_localidad: 0, nombre_localidad: 'Seleccione Localidad..' }\r\n      ];\r\n    }\r\n\r\n    if (this.state.id_provincia) {\r\n      localidades.push(\r\n        ...this.state.localidades.filter((localidad) =>\r\n          Number.isInteger(localidad.provincia)\r\n            ? localidad.provincia === this.state.id_localidad\r\n            : localidad.provincia.id_provincia === this.state.id_provincia\r\n        )\r\n      );\r\n    }\r\n\r\n    return localidades;\r\n  }\r\n\r\n  fetchCoworksConVacantes(seleccion = this.state) {\r\n    if (\r\n      seleccion.id_pais &&\r\n      seleccion.id_provincia &&\r\n      seleccion.id_localidad &&\r\n      seleccion.fechaReserva\r\n    ) {\r\n      httpClient\r\n        .get(\r\n          `api/puestos_vacantes/${\r\n            seleccion.id_localidad\r\n          }/${seleccion.fechaReserva.year()}/${seleccion.fechaReserva.month() +\r\n            1}/${seleccion.fechaReserva.date()}/c/`\r\n        )\r\n        .then((data) => {\r\n          let espacios = [...new Set(data.map((puesto) => puesto.espacio))];\r\n          let coworks = [\r\n            { id_cowork: 0, nombre_cowork: 'Todos' },\r\n            ...new Set(espacios.map((espacio) => espacio.cowork))\r\n          ];\r\n          this.setState({\r\n            puestos: data,\r\n            espacios: espacios,\r\n            coworks: coworks\r\n          });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      this.setState({ puestos: [], espacios: [], coworks: [] });\r\n    }\r\n  }\r\n\r\n  fetchInformacionGeografica() {\r\n    this.fetchPaises();\r\n  }\r\n\r\n  fetchPaises() {\r\n    httpClient\r\n      .get(`api/paises/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          paises: [{ id_pais: 0, nombre_pais: 'Seleccione Pais..' }, ...data]\r\n        })\r\n      )\r\n      .then(this.fetchProvincias())\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  fetchProvincias() {\r\n    httpClient\r\n      .get(`api/provincias/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          provincias: data.map((provincia) =>\r\n            this.completarProvincia(provincia)\r\n          )\r\n        })\r\n      )\r\n      .then(this.fetchLocalidades())\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  fetchLocalidades() {\r\n    httpClient\r\n      .get(`api/localidades/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          localidades: data.map((localidad) =>\r\n            this.completarLocalidad(localidad)\r\n          )\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  completarProvincia = (provincia) => {\r\n    provincia.pais =\r\n      this.state.paises.find((pais) => pais.id_pais === provincia.pais) ||\r\n      provincia.pais;\r\n\r\n    return provincia;\r\n  };\r\n\r\n  completarLocalidad = (localidad) => {\r\n    localidad.provincia =\r\n      this.state.provincias.find(\r\n        (provincia) => provincia.id_provincia === localidad.provincia\r\n      ) || localidad.provincia;\r\n\r\n    return localidad;\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Si hay un token de autenticación en las cookies del navegador, significa que ya inició sesión un usuario, por lo que podemos obtener sus detalles desde el backend\r\n    if (getCookie('csrftoken')) {\r\n      httpClient\r\n        .get(`api/get_detalles_usuario/`)\r\n        .then((data) => this.setState({ usuario: data }))\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    this.fetchInformacionGeografica();\r\n  }\r\n\r\n  actualizarMapa(props) {\r\n    let seleccion = {\r\n      fechaReserva: this.state.fechaReserva,\r\n      id_pais: this.state.id_pais,\r\n      id_provincia: this.state.id_provincia,\r\n      id_localidad: this.state.id_localidad\r\n    };\r\n\r\n    if (props.fechaReserva) {\r\n      this.setState({ fechaReserva: props.fechaReserva });\r\n      seleccion.fechaReserva = props.fechaReserva;\r\n    } else if (typeof props.id_pais !== typeof undefined) {\r\n      this.setState({\r\n        id_pais: props.id_pais,\r\n        id_provincia: 0,\r\n        id_localidad: 0\r\n      });\r\n      seleccion.id_pais = props.id_pais;\r\n      seleccion.id_provincia = 0;\r\n      seleccion.id_localidad = 0;\r\n    } else if (typeof props.id_provincia !== typeof undefined) {\r\n      this.setState({\r\n        id_provincia: props.id_provincia,\r\n        id_localidad: 0\r\n      });\r\n      seleccion.id_provincia = props.id_provincia;\r\n      seleccion.id_localidad = 0;\r\n    } else if (typeof props.id_localidad !== typeof undefined) {\r\n      this.setState({\r\n        id_localidad: props.id_localidad\r\n      });\r\n      seleccion.id_localidad = props.id_localidad;\r\n    }\r\n\r\n    this.fetchCoworksConVacantes(seleccion);\r\n  }\r\n\r\n  irAConfirmacion(props) {\r\n    this.setState({\r\n      id_espacio: props.id_espacio,\r\n      codigo_turno: props.codigo_turno\r\n    });\r\n    //TODO: agregar código del router y redirigir a página de confirmación\r\n  }\r\n\r\n  elegirCowork(props) {\r\n    this.setState({ id_cowork: props.id_cowork, id_espacio: 0 });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='principal'>\r\n        <Router>\r\n          <Cabecera usuario={this.state.usuario} />\r\n          <Route\r\n            exact\r\n            path={['/', '/elegir-accion']}\r\n            component={() => <ElegirAccion usuario={this.state.usuario} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path={['/reservar-puesto']}\r\n            component={() => (\r\n              <ReservarPuesto\r\n                usuario={this.state.usuario}\r\n                paises={this.state.paises}\r\n                provincias={this.getProvinciasDelPais()}\r\n                localidades={this.getLocalidadesDeLaProvincia()}\r\n                coworks={this.state.coworks}\r\n                espacios={this.state.espacios}\r\n                puestos={this.state.puestos}\r\n                id_pais={this.state.id_pais}\r\n                id_provincia={this.state.id_provincia}\r\n                id_localidad={this.state.id_localidad}\r\n                id_espacio={this.state.id_espacio}\r\n                id_cowork={this.state.id_cowork}\r\n                actualizarMapa={this.actualizarMapa}\r\n                fechaReserva={this.state.fechaReserva}\r\n                irAConfirmacion={this.irAConfirmacion}\r\n                elegirCowork={this.elegirCowork}\r\n              />\r\n            )}\r\n          />\r\n          <Pie />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Suspense fallback='Loading..'>\r\n    <Index />\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n","import getCookie from './utils';\r\n\r\n//TODO: actualmente el backend de django se sirve en el puerto 8000, no obstante deberíamos agregar una forma de automatizar el cambio a donde apuntan las URLs para no deber hacer algo como esto manualmente:\r\nlet baseUrl = '';\r\nif (process) {\r\n  baseUrl =\r\n    process.env.NODE_ENV !== 'production' ? 'http://localhost:8000' : '';\r\n}\r\n\r\n/**\r\n * Si la URL con la que se intenta realizar la request no contiene 'http' ni 'https', entonces se asume que es un fragmento al que debemos agrearle el path inicial\r\n * @param {string}  url url to fetch\r\n **/\r\nconst readUrl = (url = '') =>\r\n  url.startsWith('http://') || url.startsWith('https://')\r\n    ? url\r\n    : baseUrl\r\n    ? `${baseUrl}/${url}`\r\n    : url;\r\n\r\n/**\r\n * Maneja todas las respuestas que no son 200 (OK) como errores\r\n * @param {*} response\r\n */\r\nfunction handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\n\r\nconst get = (url = '', headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst post = (url = '', body = {}, headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'POST',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst put = (url = '', body = {}, headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'PUT',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst del = (url = '', headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nexport default {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: del\r\n};\r\n","//Función para obtener una cookie del navegador (más que nada usada para el csrf token de autenticación para django sin tener que implementar una store en redux)\r\nconst getCookie = (cookieName) => {\r\n  let qualifiedName = `${cookieName}=`;\r\n  let cookies = document.cookie.split(';').map((c) => c.trim());\r\n  let cookie = cookies.find((c) => {\r\n    return c.indexOf(qualifiedName) === 0;\r\n  });\r\n  cookie = cookie ? cookie.replace(qualifiedName, '') : '';\r\n  return cookie;\r\n};\r\n\r\nexport default getCookie;\r\n"],"sourceRoot":""}