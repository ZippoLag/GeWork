{"version":3,"sources":["utils.js","fetchWrapper.js","components/cabecera/Cabecera.js","components/pie/Pie.js","components/elegirAccion/ElegirAccion.js","components/selectorUbicacion/SelectorUbicacion.js","components/selectorFecha/SelectorFecha.js","components/selectorEspacio/SelectorEspacio.js","components/reservarPuesto/ReservarPuesto.js","index.js"],"names":["getCookie","cookieName","qualifiedName","cookie","document","split","map","c","trim","find","indexOf","replace","baseUrl","process","readUrl","url","startsWith","handleErrors","response","ok","Error","statusText","get","headers","fetch","method","Accept","then","json","post","body","JSON","stringify","put","delete","Cabecera","state","className","to","Toggle","drop","id","bsPrefix","variant","data-toggle","aria-expanded","this","props","usuario","iniciales","animation","role","size","Menu","x-placement","Item","href","username","isAdmin","Component","Pie","ElegirAccion","disabled","SelectorUbicacion","handleCambioPais","bind","handleCambioProvincia","handleCambioLocalidad","evento","nuevaIdSeleccionada","target","selectedOptions","attributes","id_pais","value","actualizarMapa","Number","parseInt","id_provincia","id_localidad","htmlFor","onChange","paises","pais","key","nombre_pais","provincias","provincia","nombre_provincia","localidades","localidad","nombre_localidad","SelectorFecha","handleCambiofecha","fechaReserva","moment","type","name","format","pattern","min","Date","SelectorEspacio","handleCambioEspacio","id_espacio","elegirEspacio","espacios","length","espacio","nombre_espacio","ReservarPuesto","coworks","puestos","Index","completarProvincia","completarLocalidad","push","filter","isInteger","seleccion","httpClient","year","month","date","data","Set","puesto","cowork","setState","id_puesto","nombre_puesto","id_cowork","nombre_cowork","catch","error","console","log","fetchPaises","fetchProvincias","fetchLocalidades","fetchInformacionGeografica","fetchCoworksConVacantes","exact","path","component","getProvinciasDelPais","getLocalidadesDeLaProvincia","ReactDOM","render","fallback","getElementById"],"mappings":"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","file":"static/js/main.923d0198.chunk.js","sourcesContent":["//Función para obtener una cookie del navegador (más que nada usada para el csrf token de autenticación para django sin tener que implementar una store en redux)\r\nconst getCookie = (cookieName) => {\r\n  let qualifiedName = `${cookieName}=`;\r\n  let cookies = document.cookie.split(';').map((c) => c.trim());\r\n  let cookie = cookies.find((c) => {\r\n    return c.indexOf(qualifiedName) === 0;\r\n  });\r\n  cookie = cookie ? cookie.replace(qualifiedName, '') : '';\r\n  return cookie;\r\n};\r\n\r\nexport default getCookie;\r\n","import getCookie from './utils';\r\n\r\n//TODO: actualmente el backend de django se sirve en el puerto 8000, no obstante deberíamos agregar una forma de automatizar el cambio a donde apuntan las URLs para no deber hacer algo como esto manualmente:\r\nlet baseUrl = '';\r\nif (process) {\r\n  baseUrl =\r\n    process.env.NODE_ENV !== 'production' ? 'http://localhost:8000' : '';\r\n}\r\n\r\n/**\r\n * Si la URL con la que se intenta realizar la request no contiene 'http' ni 'https', entonces se asume que es un fragmento al que debemos agrearle el path inicial\r\n * @param {string}  url url to fetch\r\n **/\r\nconst readUrl = (url = '') =>\r\n  url.startsWith('http://') || url.startsWith('https://')\r\n    ? url\r\n    : baseUrl\r\n    ? `${baseUrl}/${url}`\r\n    : url;\r\n\r\n/**\r\n * Maneja todas las respuestas que no son 200 (OK) como errores\r\n * @param {*} response\r\n */\r\nfunction handleErrors(response) {\r\n  if (!response.ok) {\r\n    throw Error(response.statusText);\r\n  }\r\n  return response;\r\n}\r\n\r\nconst get = (url = '', headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'GET',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst post = (url = '', body = {}, headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'POST',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst put = (url = '', body = {}, headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'PUT',\r\n    body: JSON.stringify(body),\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nconst del = (url = '', headers = {}) =>\r\n  fetch(readUrl(url), {\r\n    method: 'DELETE',\r\n    headers: {\r\n      Accept: 'application/json',\r\n      'Content-Type': 'application/json',\r\n      ...headers,\r\n      'X-CSRFToken': getCookie('csrftoken')\r\n    }\r\n  })\r\n    .then(handleErrors)\r\n    .then((response) => response.json());\r\n\r\nexport default {\r\n  get,\r\n  post,\r\n  put,\r\n  delete: del\r\n};\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\n\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\n//TODO: mover el router a index.js y usar los Links de ese componente con className=\"nav-link\" (en lugar del componente Nav.Link de react-bootstrap)\r\n\r\nimport './Cabecera.css';\r\n\r\nexport class Cabecera extends Component {\r\n  static propTypes = {\r\n    usuario: PropTypes.object\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"row w-100 m-0 p-0 d-flex justify-content-between align-items-center gework-bg-primario bg-primary\">\r\n        <Col className=\"col-12 col-md-6 d-flex justify-content-center navbar-brand\">\r\n          <Link to=\"/\">\r\n            {/* TODO: agregar logo: <img\r\n              src=\"/static/logo.png\"\r\n              width=\"33px\"\r\n              height=\"33px\"\r\n              alt={\"Logo GeWork\"}\r\n            /> */}\r\n            <h1>GeWork</h1>\r\n          </Link>\r\n          {/* TODO: mejorar responsividad partiendo título y links en rows */}\r\n          <Link className=\"nav-link\" to=\"/reservar-puesto\">Reservar puesto</Link>\r\n        </Col>\r\n        <Col className=\"col-12 col-md-4 d-flex justify-content-end justify-content-md-center\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle\r\n                drop=\"none\"\r\n                id=\"menu-usuario\"\r\n                bsPrefix=\"menu-usuario-style\"\r\n                variant=\"none\"\r\n              >\r\n                <span\r\n                  className=\"d-flex justify-content-center align-items-center dropdown-toggle username-circle gework-bg-secundario\"\r\n                  data-toggle=\"dropdown-menu\"\r\n                  aria-expanded=\"false\"\r\n                >\r\n                  {this.props.usuario.iniciales || (<Spinner\r\n                                animation=\"border\"\r\n                                role=\"status\"\r\n                                size=\"lg\"\r\n                              />)}\r\n                </span>\r\n              </Dropdown.Toggle>\r\n\r\n              <Dropdown.Menu x-placement=\"bottom-start\">\r\n                <Dropdown.Item href=\"/adminlogout/\">\r\n                  {`Cerrar sesión ${this.props.usuario.username || ''}`}\r\n                </Dropdown.Item>\r\n                {this.props.usuario.isAdmin ? (\r\n                  <Dropdown.Item href=\"/admin\">\r\n                    Administración\r\n                  </Dropdown.Item>\r\n                ) : (\r\n                  ''\r\n                )}\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n        </Col>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cabecera;\r\n","import React, { Component } from 'react';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\n\r\nimport './Pie.css';\r\n\r\nclass Pie extends Component {\r\n  state = {}\r\n\r\n  render() {\r\n    return (\r\n        <footer>\r\n          <Row className=\"w-100 d-flex justify-content-end align-items-end\">\r\n            Cindi L. Martín - Sebastián R. Vansteenkiste\r\n          </Row>\r\n        </footer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Pie;\r\n","import React, { Component } from 'react';\r\n//import PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './ElegirAccion.css';\r\n\r\nexport class ElegirAccion extends Component {\r\n  static propTypes = {\r\n  };\r\n\r\n  state = {};\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Row className=\"d-flex justify-content-around align-items-center\">\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <Link className=\"w-100 btn btn-primary\" to=\"/reservar-puesto\">Reservar Puesto</Link>\r\n          </Col>\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Reservar Sala</div>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"d-flex justify-content-around align-items-center\">\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Ofrecer Puesto</div>\r\n          </Col>\r\n          <Col className=\"col-10 col-md-4 pt-5\">\r\n            <div className=\"w-100 btn btn-primary btn-disabled\" disabled>Ofrecer Sala</div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ElegirAccion;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './SelectorUbicacion.css';\r\n\r\nexport class SelectorUbicacion extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleCambioPais = this.handleCambioPais.bind(this);\r\n    this.handleCambioProvincia = this.handleCambioProvincia.bind(this);\r\n    this.handleCambioLocalidad = this.handleCambioLocalidad.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    paises: PropTypes.array.isRequired,\r\n    provincias: PropTypes.array.isRequired,\r\n    localidades: PropTypes.array.isRequired,\r\n    id_pais: PropTypes.number,\r\n    id_provincia: PropTypes.number,\r\n    id_localidad: PropTypes.number,\r\n    actualizarMapa: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {};\r\n\r\n  handleCambioPais(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_pais.value;\r\n    this.props.actualizarMapa({\r\n      id_pais: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  handleCambioProvincia(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_provincia.value;\r\n    this.props.actualizarMapa({\r\n      id_provincia: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  handleCambioLocalidad(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_localidad.value;\r\n    this.props.actualizarMapa({\r\n      id_localidad: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  componentDidMount() {}\r\n\r\n  render() {\r\n    //TODO: mejorar apariencia! (ver por qué no andaban los dropdowns de bootstrap!)\r\n    return (\r\n      <Row className='d-flex justify-content-around align-items-center'>\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='pais-select'>País:</label>\r\n          <select\r\n            className='from-control'\r\n            id='pais-select'\r\n            onChange={this.handleCambioPais}\r\n            value={this.props.id_pais}\r\n          >\r\n            {this.props.paises.map((pais) => (\r\n              <option\r\n                key={pais.id_pais}\r\n                id_pais={pais.id_pais}\r\n                value={pais.id_pais}\r\n              >\r\n                {pais.nombre_pais}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='provincia-select'>Provincia:</label>\r\n          <select\r\n            className='from-control'\r\n            id='provincia-select'\r\n            disabled={this.props.id_pais === 0}\r\n            onChange={this.handleCambioProvincia}\r\n            value={this.props.id_provincia}\r\n          >\r\n            {this.props.provincias.map((provincia) => (\r\n              <option\r\n                key={provincia.id_provincia}\r\n                id_provincia={provincia.id_provincia}\r\n                value={provincia.id_provincia}\r\n              >\r\n                {provincia.nombre_provincia}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='localidad-select'>Localidad:</label>\r\n          <select\r\n            className='from-control'\r\n            id='localidad-select'\r\n            disabled={this.props.id_provincia === 0}\r\n            value={this.props.id_localidad}\r\n            onChange={this.handleCambioLocalidad}\r\n          >\r\n            {this.props.localidades.map((localidad) => (\r\n              <option\r\n                key={localidad.id_localidad}\r\n                id_localidad={localidad.id_localidad}\r\n                value={localidad.id_localidad}\r\n              >\r\n                {localidad.nombre_localidad}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorUbicacion;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as momentPropTypes from 'react-moment-proptypes';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './SelectorFecha.css';\r\n\r\nexport class SelectorFecha extends Component {\r\n  constructor(props){\r\n    super();\r\n\r\n    this.handleCambiofecha = this.handleCambiofecha.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    fechaReserva: momentPropTypes.momentObj.isRequired,\r\n    actualizarMapa: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {\r\n  };\r\n\r\n  handleCambiofecha(evento){\r\n    //TODO: agregar validaciones\r\n    this.props.actualizarMapa({fechaReserva: moment(evento.target.value)});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className=\"d-flex justify-content-around align-items-center\">\r\n        <Col className=\"form-group col-12 col-md-3\" role=\"group\" >\r\n          <label htmlFor=\"fecha-reserva\">Fecha:</label>\r\n\r\n          <input\r\n            type=\"date\"\r\n            id=\"fecha-reserva\"\r\n            name=\"fecha-reserva\"\r\n            value={this.props.fechaReserva.format(\"YYYY-MM-DD\")}\r\n            onChange={this.handleCambiofecha}\r\n            pattern=\"DD/MM/YYYY\"\r\n            min={new Date()}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorFecha;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nimport './SelectorEspacio.css';\r\n\r\nexport class SelectorEspacio extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.handleCambioEspacio = this.handleCambioEspacio.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    espacios: PropTypes.array.isRequired\r\n  };\r\n\r\n  state = {};\r\n\r\n  handleCambioEspacio(evento) {\r\n    let nuevaIdSeleccionada =\r\n      evento.target.selectedOptions[0].attributes.id_espacio.value;\r\n    this.props.elegirEspacio({\r\n      id_espacio: Number.parseInt(nuevaIdSeleccionada)\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row className='d-flex justify-content-around align-items-center'>\r\n        <Col className='form-group col-12 col-md-3' role='group'>\r\n          <label htmlFor='espacio-select'>Espacio:</label>\r\n          <select\r\n            className='from-control'\r\n            id='espacio-select'\r\n            disabled={this.props.espacios.length === 0}\r\n            value={this.props.id_espacio}\r\n            onChange={this.handleCambioEspacio}\r\n          >\r\n            {this.props.espacios.map((espacio) => (\r\n              <option\r\n                key={espacio.id_espacio}\r\n                id_espacio={espacio.id_espacio}\r\n                value={espacio.id_espacio}\r\n              >\r\n                {espacio.nombre_espacio}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectorEspacio;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as momentPropTypes from 'react-moment-proptypes';\r\n\r\nimport SelectorUbicacion from '../selectorUbicacion/SelectorUbicacion';\r\nimport SelectorFecha from '../selectorFecha/SelectorFecha';\r\nimport SelectorEspacio from '../selectorEspacio/SelectorEspacio';\r\n\r\nimport './ReservarPuesto.css';\r\n\r\nexport class ReservarPuesto extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.actualizarMapa = this.actualizarMapa.bind(this);\r\n  }\r\n\r\n  static propTypes = {\r\n    paises: PropTypes.array.isRequired,\r\n    provincias: PropTypes.array.isRequired,\r\n    localidades: PropTypes.array.isRequired,\r\n    fechaReserva: momentPropTypes.momentObj.isRequired,\r\n    actualizarMapa: PropTypes.func.isRequired\r\n  };\r\n\r\n  state = {};\r\n\r\n  actualizarMapa(props) {\r\n    this.props.actualizarMapa(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SelectorUbicacion\r\n          paises={this.props.paises}\r\n          provincias={this.props.provincias}\r\n          localidades={this.props.localidades}\r\n          id_pais={this.props.id_pais}\r\n          id_provincia={this.props.id_provincia}\r\n          id_localidad={this.props.id_localidad}\r\n          actualizarMapa={this.actualizarMapa}\r\n        />\r\n        <SelectorFecha\r\n          actualizarMapa={this.actualizarMapa}\r\n          fechaReserva={this.props.fechaReserva}\r\n        />\r\n        {this.props.espacios.length > 0 && (\r\n          <SelectorEspacio\r\n            coworks={this.props.coworks}\r\n            espacios={this.props.espacios}\r\n            puestos={this.props.puestos}\r\n            id_espacio={this.props.id_espacio}\r\n            elegirEspacio={this.props.elegirEspacio}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReservarPuesto;\r\n","import React, { Suspense, Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Route, BrowserRouter as Router } from 'react-router-dom';\r\n\r\nimport moment from 'moment';\r\n\r\nimport Cabecera from './components/cabecera/Cabecera';\r\nimport Pie from './components/pie/Pie';\r\n\r\nimport ElegirAccion from './components/elegirAccion/ElegirAccion';\r\nimport ReservarPuesto from './components/reservarPuesto/ReservarPuesto';\r\n\r\nimport httpClient from './fetchWrapper';\r\nimport getCookie from './utils';\r\n\r\nimport './index.css';\r\n\r\nclass Index extends Component {\r\n  constructor(props) {\r\n    super();\r\n\r\n    this.actualizarMapa = this.actualizarMapa.bind(this);\r\n    this.elegirEspacio = this.elegirEspacio.bind(this);\r\n  }\r\n\r\n  state = {\r\n    usuario: {},\r\n    coworks: [],\r\n    espacios: [],\r\n    puestos: [],\r\n    localidades: [{ id_localidad: 0, nombre_localidad: 'Cargando..' }],\r\n    provincias: [{ id_provincia: 0, nombre_localidad: 'Cargando..' }],\r\n    paises: [{ id_pais: 0, nombre_localidad: 'Cargando..' }],\r\n    id_pais: 0,\r\n    id_provincia: 0,\r\n    id_localidad: 0,\r\n    id_espacio: 0,\r\n    fechaReserva: moment(new Date())\r\n  };\r\n\r\n  getProvinciasDelPais() {\r\n    let provincias = [];\r\n\r\n    if (this.state.id_pais === 0) {\r\n      provincias = [{ id_provincia: 0, nombre_provincia: 'Seleccione Pais..' }];\r\n    } else {\r\n      provincias = [\r\n        { id_provincia: 0, nombre_provincia: 'Seleccione Provincia..' }\r\n      ];\r\n    }\r\n\r\n    if (this.state.id_pais) {\r\n      provincias.push(\r\n        ...this.state.provincias.filter((provincia) =>\r\n          Number.isInteger(provincia.pais)\r\n            ? provincia.pais === this.state.id_pais\r\n            : provincia.pais.id_pais === this.state.id_pais\r\n        )\r\n      );\r\n    }\r\n\r\n    return provincias;\r\n  }\r\n\r\n  getLocalidadesDeLaProvincia() {\r\n    let localidades = [];\r\n\r\n    if (this.state.id_provincia === 0) {\r\n      localidades = [\r\n        { id_localidad: 0, nombre_localidad: 'Seleccione Provincia..' }\r\n      ];\r\n    } else {\r\n      localidades = [\r\n        { id_localidad: 0, nombre_localidad: 'Seleccione Localidad..' }\r\n      ];\r\n    }\r\n\r\n    if (this.state.id_provincia) {\r\n      localidades.push(\r\n        ...this.state.localidades.filter((localidad) =>\r\n          Number.isInteger(localidad.provincia)\r\n            ? localidad.provincia === this.state.id_localidad\r\n            : localidad.provincia.id_provincia === this.state.id_provincia\r\n        )\r\n      );\r\n    }\r\n\r\n    return localidades;\r\n  }\r\n\r\n  fetchCoworksConVacantes(seleccion = this.state) {\r\n    if (\r\n      seleccion.id_pais &&\r\n      seleccion.id_provincia &&\r\n      seleccion.id_localidad &&\r\n      seleccion.fechaReserva\r\n    ) {\r\n      httpClient\r\n        .get(\r\n          `api/puestos_vacantes/${\r\n            seleccion.id_localidad\r\n          }/${seleccion.fechaReserva.year()}/${seleccion.fechaReserva.month() +\r\n            1}/${seleccion.fechaReserva.date()}/c/`\r\n        )\r\n        .then((data) => {\r\n          let espacios = [...new Set(data.map((puesto) => puesto.espacio))];\r\n          let coworks = [...new Set(espacios.map((espacio) => espacio.cowork))];\r\n          this.setState({\r\n            puestos: [\r\n              { id_puesto: 0, nombre_puesto: 'Seleccione Puesto..' },\r\n              ...data\r\n            ],\r\n            espacios: [\r\n              { id_espacio: 0, nombre_espacio: 'Seleccione Espacio..' },\r\n              ...espacios\r\n            ],\r\n            coworks: [\r\n              { id_cowork: 0, nombre_cowork: 'Seleccione Cowork..' },\r\n              ...coworks\r\n            ]\r\n          });\r\n        })\r\n        .catch((error) => console.log(error));\r\n    } else {\r\n      this.setState({ puestos: [], espacios: [], coworks: [] });\r\n    }\r\n  }\r\n\r\n  fetchInformacionGeografica() {\r\n    this.fetchPaises();\r\n  }\r\n\r\n  fetchPaises() {\r\n    httpClient\r\n      .get(`api/paises/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          paises: [{ id_pais: 0, nombre_pais: 'Seleccione Pais..' }, ...data]\r\n        })\r\n      )\r\n      .then(this.fetchProvincias())\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  fetchProvincias() {\r\n    httpClient\r\n      .get(`api/provincias/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          provincias: data.map((provincia) =>\r\n            this.completarProvincia(provincia)\r\n          )\r\n        })\r\n      )\r\n      .then(this.fetchLocalidades())\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  fetchLocalidades() {\r\n    httpClient\r\n      .get(`api/localidades/`)\r\n      .then((data) =>\r\n        this.setState({\r\n          localidades: data.map((localidad) =>\r\n            this.completarLocalidad(localidad)\r\n          )\r\n        })\r\n      )\r\n      .catch((error) => console.log(error));\r\n  }\r\n\r\n  completarProvincia = (provincia) => {\r\n    provincia.pais =\r\n      this.state.paises.find((pais) => pais.id_pais === provincia.pais) ||\r\n      provincia.pais;\r\n\r\n    return provincia;\r\n  };\r\n\r\n  completarLocalidad = (localidad) => {\r\n    localidad.provincia =\r\n      this.state.provincias.find(\r\n        (provincia) => provincia.id_provincia === localidad.provincia\r\n      ) || localidad.provincia;\r\n\r\n    return localidad;\r\n  };\r\n\r\n  componentDidMount() {\r\n    //Si hay un token de autenticación en las cookies del navegador, significa que ya inició sesión un usuario, por lo que podemos obtener sus detalles desde el backend\r\n    if (getCookie('csrftoken')) {\r\n      httpClient\r\n        .get(`api/get_detalles_usuario/`)\r\n        .then((data) => this.setState({ usuario: data }))\r\n        .catch((error) => console.log(error));\r\n    }\r\n\r\n    this.fetchInformacionGeografica();\r\n  }\r\n\r\n  actualizarMapa(props) {\r\n    let seleccion = {\r\n      fechaReserva: this.state.fechaReserva,\r\n      id_pais: this.state.id_pais,\r\n      id_provincia: this.state.id_provincia,\r\n      id_localidad: this.state.id_localidad\r\n    };\r\n\r\n    if (props.fechaReserva) {\r\n      this.setState({ fechaReserva: props.fechaReserva });\r\n      seleccion.fechaReserva = props.fechaReserva;\r\n    } else if (typeof props.id_pais !== typeof undefined) {\r\n      this.setState({\r\n        id_pais: props.id_pais,\r\n        id_provincia: 0,\r\n        id_localidad: 0\r\n      });\r\n      seleccion.id_pais = props.id_pais;\r\n      seleccion.id_provincia = 0;\r\n      seleccion.id_localidad = 0;\r\n    } else if (typeof props.id_provincia !== typeof undefined) {\r\n      this.setState({\r\n        id_provincia: props.id_provincia,\r\n        id_localidad: 0\r\n      });\r\n      seleccion.id_provincia = props.id_provincia;\r\n      seleccion.id_localidad = 0;\r\n    } else if (typeof props.id_localidad !== typeof undefined) {\r\n      this.setState({\r\n        id_localidad: props.id_localidad\r\n      });\r\n      seleccion.id_localidad = props.id_localidad;\r\n    }\r\n\r\n    this.fetchCoworksConVacantes(seleccion);\r\n  }\r\n\r\n  elegirEspacio(props) {\r\n    this.setState({ id_espacio: props.id_espacio });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='principal'>\r\n        <Router>\r\n          <Cabecera usuario={this.state.usuario} />\r\n          <Route\r\n            exact\r\n            path={['/', '/elegir-accion']}\r\n            component={() => <ElegirAccion usuario={this.state.usuario} />}\r\n          />\r\n          <Route\r\n            exact\r\n            path={['/reservar-puesto']}\r\n            component={() => (\r\n              <ReservarPuesto\r\n                usuario={this.state.usuario}\r\n                paises={this.state.paises}\r\n                provincias={this.getProvinciasDelPais()}\r\n                localidades={this.getLocalidadesDeLaProvincia()}\r\n                coworks={this.state.coworks}\r\n                espacios={this.state.espacios}\r\n                puestos={this.state.puestos}\r\n                id_pais={this.state.id_pais}\r\n                id_provincia={this.state.id_provincia}\r\n                id_localidad={this.state.id_localidad}\r\n                id_espacio={this.state.id_espacio}\r\n                actualizarMapa={this.actualizarMapa}\r\n                fechaReserva={this.state.fechaReserva}\r\n                elegirEspacio={this.elegirEspacio}\r\n              />\r\n            )}\r\n          />\r\n          <Pie />\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <Suspense fallback='Loading..'>\r\n    <Index />\r\n  </Suspense>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}